1️⃣ 驱动安装与检测

Ubuntu 默认带 ALSA 驱动，大部分声卡和 USB 耳机即插即用。
如果是定制硬件或无声卡，需手动安装：
sudo apt update
sudo apt install alsa-base alsa-utils linux-sound-base -y
检测声卡：
lspci | grep -i audio   # PCI 声卡
lsusb | grep -i audio   # USB 音频设备
列出可用设备：
aplay -l    # 播放设备
arecord -l  # 录音设备
📌 如果输出里能看到 card 0、device 0 之类，说明驱动加载成功。
2️⃣ 安装 PipeWire 音频服务

Ubuntu 24 默认使用 PipeWire，建议精简安装：
sudo apt install --no-install-recommends \
    pipewire wireplumber pipewire-audio-client-libraries -y

禁用 PulseAudio，避免冲突：
systemctl --user mask pulseaudio
systemctl --user stop pulseaudio.socket pulseaudio.service

启用 PipeWire：
systemctl --user enable --now pipewire pipewire-pulse wireplumber

验证：
pactl info | grep "Server Name"

输出应为：
Server Name: PulseAudio (on PipeWire 0.3.x)

安装 FreeRDP
sudo apt install freerdp2-x11 freerdp2-wayland freerdp2-shadow-cli -y

4️⃣ 本地音频测试

测试播放：
speaker-test -t sine -f 440 -D default -c 2

测试录音：
arecord -f cd test.wav
aplay test.wav

FreeRDP 音频流式转发

远端声音 → 本地播放
xfreerdp /v:<server_ip> /u:<username> /p:<password> /sound:sys:pipewire
本地麦克风 → 远端输入
xfreerdp /v:<server_ip> /u:<username> /p:<password> /microphone:sys:pipewire

双向流式音频

xfreerdp /v:<server_ip> /u:<username> /p:<password> \
  /sound:sys:pipewire /microphone:sys:pipewire

🎯 声音重定向到 ThinClient 的机制
1️⃣ Windows Server → ThinClient

FreeRDP 默认支持 RDP Audio Redirection 协议：

Windows 的系统声音 / 应用声音 会被编码（RDP-PCM/WAV/AAC）

通过 RDP 通道传输到客户端

ThinClient（xfreerdp）解码 → PipeWire/ALSA 播放

👉 在 ThinClient 启动 FreeRDP 时加上：

xfreerdp /v:<server_ip> /u:<username> /p:<password> /sound:sys:pipewire


这样 远端 Windows 的声音 就会直接播放在 ThinClient 本地。
（如果不指定 sys:pipewire，也可以用 sys:pulse 或 sys:alsa，但 Ubuntu24 推荐 pipewire）

2️⃣ Linux Server → ThinClient

Linux 端比较复杂，因为 RDP 并不是 Linux 原生协议。常见几种方式：

🔹 (A) 使用 xrdp

在 Linux Server 安装 xrdp：

sudo apt install xrdp pulseaudio-module-xrdp


启动服务：

sudo systemctl enable --now xrdp


ThinClient 端用 FreeRDP 连接：

xfreerdp /v:<linux_server_ip> /u:<username> /p:<password> /sound:sys:pipewire


👉 声音会通过 PulseAudio → xrdp 音频通道 → RDP → ThinClient。

🔹 (B) 使用 PulseAudio 网络传输

如果不用 RDP，仅仅要把 Linux Server 的声音转到 ThinClient，可以直接用 PulseAudio 的网络模块：

Linux Server 端：

pactl load-module module-native-protocol-tcp auth-ip-acl=<thinclient_ip>


ThinClient 端：

export PULSE_SERVER=<server_ip>
paplay /usr/share/sounds/alsa/Front_Center.wav


👉 所有声音会被转发到 ThinClient 的 PipeWire/PulseAudio 播放。

🔹 (C) 使用 GStreamer / RTP / WebRTC

适合实时音频流转发场景，例如多媒体播放、远程教学：

# Server 端推送
gst-launch-1.0 pulsesrc ! audioconvert ! audioresample ! opusenc ! rtpopuspay ! udpsink host=<thinclient_ip> port=5000

# ThinClient 端接收
gst-launch-1.0 udpsrc port=5000 caps="application/x-rtp" ! rtpopusdepay ! opusdec ! audioconvert ! audioresample ! autoaudiosink

3️⃣ 验证声音重定向
Windows Server 验证

在远端 Windows 播放一个视频

声音应该直接出现在 ThinClient

Linux Server (xrdp) 验证

在远端 Linux 播放测试音频：

paplay /usr/share/sounds/alsa/Front_Center.wav


确认 ThinClient 能听到声音

PulseAudio 网络验证

在 Linux Server 播放声音，ThinClient 作为输出设备

pavucontrol 可以看到音频流

📐 总结

Windows → ThinClient：FreeRDP 的 /sound 就能带回声音

Linux → ThinClient：

推荐用 xrdp + FreeRDP /sound

轻量级可以用 PulseAudio over TCP

实时多媒体可用 GStreamer RTP/WebRTC

🔎 排查步骤
1. 确认安装包完整

运行：

sudo apt install pipewire wireplumber libspa-0.2-bluetooth libspa-0.2-jack -y

2. 确认用户 systemd 是否启用
loginctl show-user $USER | grep Linger


如果显示 Linger=no，启用：

sudo loginctl enable-linger $USER

3. 手动启动测试

不用 enable，先尝试直接运行：

systemctl --user start pipewire.service
systemctl --user start wireplumber.service


再检查状态：

systemctl --user status pipewire.service
systemctl --user status wireplumber.service

4. 验证 PipeWire 是否工作
pactl info | grep "Server Name"


正常应显示：

Server Name: PulseAudio (on PipeWire 0.3.x)
Sep 09 03:32:29 ubuntu systemd[3890]: wireplumber.service: Bound to unit pipewi>
Sep 09 03:32:29 ubuntu systemd[3890]: Dependency failed for wireplumber.service>
-- Subject: A start job for unit UNIT has failed
-- Defined-By: systemd
-- Support: http://www.ubuntu.com/support
--
-- A start job for unit UNIT has finished with a failure.
--
-- The job identifier is 176 and the job result is dependency.
Sep 09 03:32:29 ubuntu systemd[3890]: wireplumber.service: Job wireplumber.serv>

root@ubuntu:~# systemctl status  wireplumber
Unit wireplumber.service could not be found.
root@ubuntu:~# systemctl --user start wireplumber
A dependency job for wireplumber.service failed. See 'journalctl -xe' for detail                                                                                                                                                           s.
root@ubuntu:~# systemctl status pipewire
Unit pipewire.service could not be found.
root@ubuntu:~# systemctl status^Cipewire
root@ubuntu:~# systemctl --user start wireplumber
A dependency job for wireplumber.service failed. See 'journalctl -xe' for detail                                                                                                                                                           s.
root@ubuntu:~# systemctl --user start pipewire
root@ubuntu:~# systemctl --user status pipewire
* pipewire.service - PipeWire Multimedia Service
     Loaded: loaded (/usr/lib/systemd/user/pipewire.service; enabled; preset: en                                                                                                                                                           abled)
     Active: inactive (dead)
TriggeredBy: * pipewire.socket
  Condition: start condition unmet at Tue 2025-09-09 03:34:01 UTC; 6s ago
             `- ConditionUser=!root was not met

Sep 09 03:16:40 ubuntu systemd[3890]: pipewire.service - PipeWire Multimedia Ser                                                                                                                                                           vice was skipped because of an unmet condition check (ConditionUser=!root).
Sep 09 03:30:55 ubuntu systemd[3890]: pipewire.service - PipeWire Multimedia Ser                                                                                                                                                           vice was skipped because of an unmet condition check (ConditionUser=!root).
Sep 09 03:30:55 ubuntu systemd[3890]: pipewire.service - PipeWire Multimedia Ser                                                                                                                                                           vice was skipped because of an unmet condition check (ConditionUser=!root).
Sep 09 03:31:58 ubuntu systemd[3890]: pipewire.service - PipeWire Multimedia Ser                                                                                                                                                           vice was skipped because of an unmet condition check (ConditionUser=!root).
Sep 09 03:31:58 ubuntu systemd[3890]: pipewire.service - PipeWire Multimedia Ser                                                                                                                                                           vice was skipped because of an unmet condition check (ConditionUser=!root).
Sep 09 03:32:13 ubuntu systemd[3890]: pipewire.service - PipeWire Multimedia Ser                                                                                                                                                           vice was skipped because of an unmet condition check (ConditionUser=!root).
Sep 09 03:32:29 ubuntu systemd[3890]: pipewire.service - PipeWire Multimedia Ser                                                                                                                                                           vice was skipped because of an unmet condition check (ConditionUser=!root).
Sep 09 03:33:25 ubuntu systemd[3890]: pipewire.service - PipeWire Multimedia Ser                                                                                                                                                           vice was skipped because of an unmet condition check (ConditionUser=!root).
Sep 09 03:33:53 ubuntu systemd[3890]: pipewire.service - PipeWire Multimedia Ser                                                                                                                                                           vice was skipped because of an unmet condition check (ConditionUser=!root).
Sep 09 03:34:01 ubuntu systemd[3890]: pipewire.service - PipeWire Multimedia Ser                                                                                                                                                           vice was skipped because of an unmet condition check (ConditionUser=!root).






[Unit]
Description=PipeWire Multimedia Service (Root)
After=sound.target network.target
Wants=network.target

[Service]
Type=simple
ExecStart=/usr/bin/pipewire
ExecStartPost=/usr/bin/wireplumber
Restart=on-failure
Environment=PIPEWIRE_LATENCY=128/48000
# 允许 root 用户启动
User=root
Group=root

[Install]
WantedBy=multi-user.target




apt update
apt install --no-install-recommends \
    pipewire \
    wireplumber \
    libspa-0.2-modules \
    alsa-utils \
    -y
说明：

pipewire → 核心服务

wireplumber → 会话管理器

libspa-0.2-modules → 提供 ALSA、PulseAudio 兼容模块

alsa-utils → 用于测试声音（speaker-test、aplay）

3️⃣ 自定义 systemd 服务（root 用户专用）
因为瘦客户机通常只有 root，所以要写一个自定义服务（而不是 --user）。

创建 /etc/systemd/system/pipewire-root.service：

ini
复制代码
[Unit]
Description=PipeWire Multimedia Service (Root)
After=sound.target network.target
Wants=network.target

[Service]
Type=simple
ExecStart=/usr/bin/pipewire
ExecStartPost=/usr/bin/wireplumber
Restart=on-failure
User=root
Group=root

[Install]
WantedBy=multi-user.target
启用：

bash
复制代码
systemctl daemon-reload
systemctl enable --now pipewire-root.service
















